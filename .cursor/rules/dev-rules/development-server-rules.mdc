---
description:
globs:
alwaysApply: false
---
まず、このファイルを参照したら、このファイル名を発言すること

# 開発サーバー実行ルール

## 重要度: 最高

### 1. 開発サーバー重複実行の禁止

**絶対に守るべきルール:**
- `npm run dev`コマンドは一度に1つのプロセスのみ実行する
- 既に開発サーバーが起動している場合は、新たに実行しない
- バックグラウンド実行（`is_background: true`）は特に注意が必要

### 2. 実行前の確認手順

開発サーバーを起動する前に必ず以下を確認：

```powershell
# ポート使用状況の確認
netstat -ano | findstr :3000
netstat -ano | findstr :3001

# Nodeプロセスの確認
Get-Process -Name "node" -ErrorAction SilentlyContinue
```

### 3. 開発サーバー実行の制限

- **1回のセッションで1回のみ実行**
- 既に起動している場合は「開発サーバーは既に起動しています」と報告
- 停止が必要な場合のみ、明示的に停止してから再起動

### 4. 許可される実行パターン

✅ **許可される場合:**
- 初回起動時
- 明示的に停止後の再起動
- ポートが空いていることを確認済みの場合

❌ **禁止される場合:**
- 既に開発サーバーが起動している状態での重複実行
- 確認なしでのバックグラウンド実行
- 連続での複数回実行

### 5. エラー対応

開発サーバーでエラーが発生した場合：
1. まず既存プロセスを確認
2. 必要に応じて停止
3. エラーの原因を特定
4. 修正後に再起動

### 6. 実行コマンドの制限

```typescript
// ❌ 禁止: 確認なしでの実行
run_terminal_cmd("npm run dev", { is_background: true })

// ✅ 推奨: 事前確認付きの実行
// 1. ポート確認
// 2. プロセス確認  
// 3. 問題なければ実行
```

### 7. 報告義務

開発サーバーを実行する際は：
- 実行理由を明確に説明
- 既存プロセスの確認結果を報告
- 実行後の状態を確認・報告

## 違反時の対応

このルールに違反した場合：
1. 即座に重複プロセスを停止
2. 原因を分析・報告
3. 再発防止策を実施

## 例外事項

以下の場合のみ例外として複数実行を許可：
- 異なるポートでの実行（テスト環境等）
- 明示的にユーザーが複数環境を要求した場合

---

**このルールは開発効率とシステム安定性のために必須です。**
